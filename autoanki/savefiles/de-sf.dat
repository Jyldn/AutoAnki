<h3>sprak</h3>Verb <i></i><ol><li>singular past indicative of spreken</li></ol><br>
====================================
<h3>Frau</h3>Noun <i>f <span style='color:grey;font-size:0.85em;'>genitive: Frau, plural: Frauen, diminutive: Fräulein n or Frauchen n</span></i><ol><li>woman <span style='color:grey;font-size:0.85em;'>adult female human</span></li><li>wife <span style='color:grey;font-size:0.85em;'>married woman, especially in relation to her spouse</span></li><li>a title of courtesy, equivalent to Mrs/Ms, which has nearly replaced Fräulein in the function of Miss</li><li>madam <span style='color:grey;font-size:0.85em;'>polite form of address for a woman or lady</span></li><li>lady; noblewoman <span style='color:grey;font-size:0.85em;'>woman of breeding or higher class</span></li></ol><br><span style='color:grey;font-size:0.85em;'>Etymology</span><span style='color:grey;font-size:0.85em;'><ul><li>From Middle High German vrouwe, vrowe, from Old High German frouwa <span style='color:grey;font-size:0.85em;'>“mistress”</span>, from Proto-Germanic *frawjǭ, a feminine: form of *frawjô <span style='color:grey;font-size:0.85em;'>“lord”</span>, giving Old English frēa <span style='color:grey;font-size:0.85em;'>“lord, king; God, Christ; husband”</span>, frēo <span style='color:grey;font-size:0.85em;'>“woman”</span>, from Proto-Indo-European *proHwo-, a derivation from *per- <span style='color:grey;font-size:0.85em;'>“to go forward”</span>. Cognate with Old Saxon frūa <span style='color:grey;font-size:0.85em;'>hence Middle Low German vrouwe, Modern Low German frug</span>, Old Norse freyja and frú <span style='color:grey;font-size:0.85em;'>hence Icelandic frú and Norwegian frue</span>. Further cognates include German Fron <span style='color:grey;font-size:0.85em;'>“corvée, soccage”</span> and its kin. The Indo-European root is also the source of Proto-Slavic *pravъ <span style='color:grey;font-size:0.85em;'>“right, straight, correct”</span>, whence Old Church Slavonic правъ <span style='color:grey;font-size:0.85em;'>pravŭ</span>, Russian пра́вый <span style='color:grey;font-size:0.85em;'>právyj, “right”</span>, perhaps also Ancient Greek πρῶρα <span style='color:grey;font-size:0.85em;'>prôra, “bow, prow”</span> and the first element of Latin provincia, if this is from Proto-Indo-European *prōwiōn.
</li></ul><br></span>
====================================
<h3>Katze</h3>Noun <i>f <span style='color:grey;font-size:0.85em;'>genitive: Katze, plural: Katzen, diminutive: Kätzchen n or Kätzlein n, masculine: männliche Katze or Kater, feminine: weibliche Katze or Kätzin or Katerin</span></i><ol><li>house cat, Felis silvestris catus</li><li><span style='color:grey;font-size:0.85em;'>specifically</span> female house cat</li><li>cat <span style='color:grey;font-size:0.85em;'>any member of the genus Felis</span></li><li><span style='color:grey;font-size:0.85em;'>astronomy, historical</span> the obsolete constellation Felis</li></ol><br><span style='color:grey;font-size:0.85em;'>Etymology</span><span style='color:grey;font-size:0.85em;'><ul><li>From Middle High German katze, Old High German kazza, from Proto-West Germanic *kattā, from Late Latin catta, feminine: of cattus. Akin to Old English catt <span style='color:grey;font-size:0.85em;'>“cat”</span>.
</li></ul><br></span><span style='color:grey;font-size:0.85em;'>Usage</span><ul><span style='color:grey;font-size:0.85em;'></ul></span><br>
====================================
<h3>Mann</h3>Noun <i>m <span style='color:grey;font-size:0.85em;'>strong or mixed, genitive: Mannes or Manns, plural: Männer or <span style='color:grey;font-size:0.85em;'>sometimes after numerals</span> Mann or <span style='color:grey;font-size:0.85em;'>rare or poetic</span> Mannen, diminutive: Männchen n or Männlein n or Männle n or Mannli n or Männeken n or Mandl n or Manderl n, feminine: Männin</span></i><ol><li>man, male human being</li><li>husband</li></ol><br>
====================================
